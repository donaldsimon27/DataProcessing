#Load dataset
prelim_petct <- read_excel(path="~/Desktop/petct/Data/petct_prac.xlsx")
#Load dataset
prelim_petct <- readxl(path="~/Desktop/petct/Data/petct_prac.xlsx")
#Load dataset
prelim_petct <- read_xl(path="~/Desktop/petct/Data/petct_prac.xlsx")
library(readxl)
petct_prac <- read_excel("Data/petct_prac.xlsx")
View(petct_prac)
str(petct_prac)
mean[petct_prac$`Largerst cavity size @BL`]
library(readxl)
petct_prac <- read_excel("Data/petct_prac.xlsx")
View(petct_prac)
mean[petct_prac$Largerst_cavity_size_BL]
mean[petct_prac$SUVmean_W16_24_SUVbw_LeftLung]
library(loadxl)
##Load packages----------
library(tidyverse)
library(skimr)
library(here)
##Load data------------
prelim_petct <- readxl(path = "~/Desktop/petct/Data/petct_prac.xlsx",
sheet = 2,
skip = 1)
library(tidyverse)
library(skimr)
library(here)
library(readxl)
##Load data------------
prelim_petct <- readxl(path = "~/Desktop/petct/Data/petct_prac.xlsx",
sheet = 2,
skip = 1)
##Load data------------
prelim_petct <- read_excel(path = "~/Desktop/petct/Data/petct_prac.xlsx",
sheet = 2,
skip = 1)
##Load data------------
prelim_petct <- read_excel(path = "/Desktop/petct/Data/petct_prac.xlsx",
sheet = 2,
skip = 1)
##Load data------------
prelim_petct <- read_excel(path = "~/Desktop/Projects/petct/Data/petct_prac.xlsx",
sheet = 2,
skip = 1)
##Load data------------
prelim_petct <- read_excel(path = "~/Desktop/Projects/petct/Data/petct_prac.xlsx",
sheet = 1,
skip = 1)
str(prelim_petct)
view(prelim_petct)
summary(prelim_petct)
skim(prelim_petct)
##Load data------------
prelim_petct <- read_excel(path = "~/Desktop/Projects/petct/Data/petct_prac.xlsx",
sheet = 1)
head(prelim_petct)
summary(prelim_petct)
ggplot(prelim_petct, aes(SUVmax_W16_24_SUVbw _RightLung, SUVmax_W16_24_SUVbw_LeftLung)) +
geom_point()
ggplot(prelim_petct, aes(SUVmax_W16_24_SUVbw _RightLung, SUVmax_W16_24_SUVbw_LeftLung, na.rm = TRUE)) +
geom_point()
ggplot(prelim_petct, aes(`SUVmax_W16_24_SUVbw _RightLung`, `SUVmax_W16_24_SUVbw_LeftLung`, na.rm = TRUE)) +
geom_point()
ggplot(prelim_petct, aes(`SUVmax_W16_24_SUVbw _RightLung`, `SUVmax_W16_24_SUVbw_LeftLung`, na.rm = TRUE)) +
geom_point() +
geom_smooth(method = "lm", se = TRUE)
ggplot(prelim_petct, aes(`SUVmax_W16_24_SUVbw _RightLung`)) + geom_histogram()
ggplot(prelim_petct, aes(`SUVmax_W16_24_SUVbw _RightLung`)) + geom_histogram(binwidth = 0.1)
ggplot(prelim_petct, aes(`SUVmax_W16_24_SUVbw _RightLung`)) + geom_histogram(binwidth = 10)
ggplot(prelim_petct, aes(`SUVmax_W16_24_SUVbw _RightLung`)) + geom_histogram(binwidth = 1)
ggplot(prelim_petct, aes(`SUVmax_W16_24_SUVbw _RightLung`)) + geom_histogram(binwidth = 5)
ggplot(prelim_petct, aes(`SUVmax_W16_24_SUVbw _RightLung`)) + geom_histogram(binwidth = 1.5)
ggplot(prelim_petct, aes(`SUVmax_W16_24_SUVbw _RightLung`)) + geom_histogram(binwidth = 1)
ggplot(prelim_petct, aes(`SUVmax_W16_24_SUVbw _RightLung`, `SUVmax_W16_24_SUVbw_LeftLung`, na.rm = TRUE)) +
geom_point() +
geom_smooth(method = "lm", se = TRUE) +
labs(title = Relationship of Right and Left Lung SUV vaalues,
subtitle = "Luminex Substidy",
x = "Right Lung W16 or W24 SUVmax",
y = "Left W16 or W24 SUVmax",
color = "blue",
caption: PredictTB)
ggplot(prelim_petct, aes(`SUVmax_W16_24_SUVbw _RightLung`, `SUVmax_W16_24_SUVbw_LeftLung`, na.rm = TRUE)) +
geom_point() +
geom_smooth(method = "lm", se = TRUE) +
labs(title = Relationship of Right and Left Lung SUV vaalues,
subtitle = "Luminex Substidy",
x = "Right Lung W16 or W24 SUVmax",
y = "Left W16 or W24 SUVmax",
color = "blue",
caption: "PredictTB")
ggplot(prelim_petct, aes(`SUVmax_W16_24_SUVbw _RightLung`, `SUVmax_W16_24_SUVbw_LeftLung`, na.rm = TRUE)) +
geom_point() +
geom_smooth(method = "lm", se = TRUE) +
labs(title = Relationship of Right and Left Lung SUV vaalues,
subtitle = "Luminex Substidy",
x = "Right Lung W16 or W24 SUVmax",
y = "Left W16 or W24 SUVmax",
color = "blue",
caption = "PredictTB")
ggplot(prelim_petct, aes(`SUVmax_W16_24_SUVbw _RightLung`, `SUVmax_W16_24_SUVbw_LeftLung`, na.rm = TRUE)) +
geom_point() +
geom_smooth(method = "lm", se = TRUE) +
labs(title = "Relationship of Right and Left Lung SUV vaalues",
subtitle = "Luminex Substidy",
x = "Right Lung W16 or W24 SUVmax",
y = "Left W16 or W24 SUVmax",
color = "blue",
caption = "PredictTB")
ggplot(prelim_petct, aes(`SUVmax_W16_24_SUVbw _RightLung`, `SUVmax_W16_24_SUVbw_LeftLung`, na.rm = TRUE)) +
geom_point() +
geom_smooth(method = "lm", se = F) +
labs(title = "Relationship of Right and Left Lung SUV vaalues",
subtitle = "Luminex Substidy",
x = "Right Lung W16 or W24 SUVmax",
y = "Left W16 or W24 SUVmax",
color = "blue",
caption = "PredictTB")
ggplot(prelim_petct, aes(`SUVmax_W16_24_SUVbw _RightLung`, `SUVmax_W16_24_SUVbw_LeftLung`, na.rm = TRUE)) +
geom_point() +
geom_smooth(method = "lm", se = T) +
labs(title = "Relationship of Right and Left Lung SUV vaalues",
subtitle = "Luminex Substidy",
x = "Right Lung W16 or W24 SUVmax",
y = "Left W16 or W24 SUVmax",
color = "blue",
caption = "PredictTB")
##Explore------------
str(prelim_petct)
names(prelim_petct)
skim(prelim_petct)
ggplot(prelim_petct, aes(`SUVmax_W16_24_SUVbw _RightLung`, `SUVmax_W16_24_SUVbw_LeftLung`, na.rm = TRUE)) +
geom_boxplot()
ggplot(prelim_petct, aes(`SUVmax_W16_24_SUVbw _RightLung`, `SUVmax_W16_24_SUVbw_LeftLung`, na.rm = TRUE)) +
geom_boxplot() +
labs(title = "Relationship of Right and Left Lung SUV vaalues",
subtitle = "Luminex Substidy",
x = "Right Lung W16 or W24 SUVmax",
y = "Left W16 or W24 SUVmax",
color = "blue",
caption = "PredictTB")
##Load packages----------
library(tidyverse)
library(skimr)
library(here)
library(readxl)
##Load data------------
prelim_petct <- read_excel(path = "~/Desktop/Projects/petct/Data/petct_prac.xlsx",
sheet = 1)
##Explore------------
str(prelim_petct)
View(prelim_petct)
head(prelim_petct)
tail(prelim_petct)
names(prelim_petct)
summary(prelim_petct)
##Scripts-------------
ggplot(prelim_petct, aes(`SUVmax_W16_24_SUVbw _RightLung`)) + geom_histogram(binwidth = 1)
ggplot(prelim_petct, aes(`SUVmax_W16_24_SUVbw _RightLung`, `SUVmax_W16_24_SUVbw_LeftLung`, na.rm = TRUE)) +
geom_point() +
geom_smooth(method = "lm", se = T) +
labs(title = "Relationship of Right and Left Lung SUV vaalues",
subtitle = "Luminex Substidy",
x = "Right Lung W16 or W24 SUVmax",
y = "Left W16 or W24 SUVmax",
color = "blue",
caption = "PredictTB")
ggplot(prelim_petct, aes(`SUVmax_W16_24_SUVbw _RightLung`, `SUVmax_W16_24_SUVbw_LeftLung`, na.rm = TRUE)) +
geom_boxplot() +
labs(title = "Relationship of Right and Left Lung SUV vaalues",
subtitle = "Luminex Substidy",
x = "Right Lung W16 or W24 SUVmax",
y = "Left W16 or W24 SUVmax",
color = "blue",
caption = "PredictTB")
##Load data------------
prelim_petct <- read_excel(path = "~/Desktop/Projects/petct/Data/petct_prac.xlsx",
sheet = 1)
View(prelim_petct)
#Load dataset--------
ptb_petct <- read.csv("~/Desktop/Projects/petct/Data/ds_petct.xlsx", col.names = TRUE)
View(ptb_petct)
#Load dataset--------
ptb_petct <- read_csv("~/Desktop/Projects/petct/Data/ds_petct.xlsx",
col.names = TRUE)
library(readr)
#Load dataset--------
ptb_petct <- read_csv("~/Desktop/Projects/petct/Data/ds_petct.xlsx",
col.names = TRUE)
#Load dataset--------
ptb_petct <- read_csv("~/Desktop/Projects/petct/Data/ds_petct.xlsx",
col_names = TRUE)
#Load dataset--------
ptb_petct <- read_csv("/Desktop/Projects/petct/Data/ds_petct.xlsx",
col_names = TRUE)
#Load dataset--------
ptb_petct <- read_csv("./Desktop/Projects/petct/Data/ds_petct.xlsx",
col_names = TRUE)
#Load dataset--------
ptb_petct <- read_csv("./Data/ds_petct.xlsx",
col_names = TRUE)
#Load dataset--------
getwd()
ptb_petct <- read_csv("./Data/ds_petct.xlsx")
View(ptb_petct)
library(tidy)
library(tidyverse)
str_c(x,sep = "|", collapse = NULL)
x <- c("Apple", "Banana", "Pear")
str_c(x,sep = "|", collapse = NULL)
str_c(x,
sep = "|",
collapse = 1)
str_c(x,
sep = "|",
collapse = "|")
str_c(x,
collapse = "|")
library(tidyverse)
library(lubridate)
library(nycflights13)
flights <- flights
View(flights)
glimpse(flights)
flights
flights1 <- flights %>%
select(-starts_with("sched"),
-starts_with("arr"),
-starts_with("dep"),
-time_hour) %>%
mutate(departure = make_datetime(year = year,
month = month,
day = day,
hour = hour,
min = minute))
flights1
View(flights1)
flights2 <- flights1 %>%
mutate(dep_date = as_date(departure)) %>%
select(-year, -month, -day, -hour, -minute) # They are superfluous now
flights2
View(flights2)
flights3 <- flights2 %>%
mutate(dep_dayweek = wday(departure),
dep_hour = hour(departure))
flights3
View(flights3)
flights3 <- flights2 %>%
mutate(dep_dayweek = wday(departure, label = T),
dep_hour = hour(departure))
flights3
View(flights3)
roxy_age <- today() - dmy(18041985)
roxy_age
class(roxy_age)
ur_roxy_age <- as.duration(roxy_age)
dur_roxy_age
dur_roxy_age <- as.duration(roxy_age)
dur_roxy_age
class(dur_roxy_age)
# 10 seconds
dseconds(10)
# 10 weeks
dweeks(10)
# 10 years
dyears(10)
roxy_age + dweeks(6.5)
as.duration(roxy_age - dweeks(12))
roxy_age <- today() - ymd(19850418)
per_roxy_age <- as.period(roxy_age)
per_roxy_age
# 12 seconds
seconds(12)
# 12 hours
hours(12)
# Vector of months
mnths <- c(12, 14, 20, 15)
months(mnths)
# 12 years
years(12)
# Arithmetic with periods
10 * (months(6) + days(1))
days(50) + hours(25) + minutes(2)
ymd("2016 Jan 01") + dyears(1)
ymd("2016 Jan 01") + years(1)
flights4 <- flights3 %>%
mutate(nextday = dep_date + days(1))
flights4
View(flights4)
ymd(c("2011-09-10", "sugar"))
library(tidyverse)
stocks <- tibble(
year   = c(2015, 2015, 2015, 2015, 2016, 2016, 2016, 2017, 2017),
qtr    = c(1, 2, 3, 4, 2, 3, 4, 1, 4),
return = c(1.88, NA, -10, NA, 0.92, 0.17, 2.66, 3.18, 4.87)
)
stocks
stocks1 <- complete(stocks, year, qtr)
stocks1
summary(stocks1)
stocks1
stocks2 <- mutate(stocks1,
return2 = ifelse(return < 0, NA, return))
stocks2
library(tidyverse)
library(nycflights13)
airlines <- airlines # Lookup full carrier name from abbreviated code
airports <- airports # information about each airport
planes <- planes # information about each plane
weather <- weather # weather at each NYC airport at each hour
flights <- flights
View(airlines)
View(airports)
View(flights)
View(planes)
View(weather)
View(planes)
View(weather)
# For planes the key is tailnum
n_planes <- count(planes, tailnum)
n_planes
filter(n_planes, n > 1)
View(n_planes)
n_airports <- count(airports, faa)
filter(n_airports, n > 1)
n_airlines <- count(airlines, carrier)
filter(n_airlines, n > 1)
n_weather <- count(weather, origin, year, month, day, hour)
filter(n_weather, n > 1)
n_flights <- count(flights, flight, tailnum, year, month, day, hour)
filter(n_flights, n > 1)
View(n_flights)
# Let's try now by adding on "minute"
n_flights <- count(flights, flight, tailnum, year, month, day, hour, minute)
filter(n_flights, n > 1)
flights1 <- select(flights, year:day, hour, origin, dest, tailnum, carrier)
View(flights1)
flights2 <- left_join(flights1, airlines, by = "carrier")
flights2
View(airports)
flights3 <- left_join(flights1, airports, by = c("dest" = "faa"))
View(flights3)
# 1.Join the airport data to the weather data? Is the relationship 1:m, m:1,
# m:m, or 1:1?
# HINT: View(airports) to have a quick look at all of the airport codes
View(airports)
View(weather)
airport1 <- filter(airport, faa) %>%
count(n > 1)
# 1.Join the airport data to the weather data? Is the relationship 1:m, m:1,
# m:m, or 1:1?
# HINT: View(airports) to have a quick look at all of the airport codes
##The relationship is likely to be m:1
View(airports)
airport1 <- filter(airports, faa) %>%
count(n > 1)
airport1 <- filter(airports, "faa") %>%
count(n > 1)
n_airport <- count(airports, faa) %>%
filter(n > 1)
n_airport
airport1 <- left_join(airports, by = faa )
airport1 <- left_join(airports, weather,"faa")
airport1 <- left_join(airports, weather,by = "faa")
airport1 <- left_join(airports, weather,by = faa
airport1 <- left_join(airports, weather, by = faa)
airport1 <- left_join(weather, airports, by = faa)
airport1 <- left_join(airports, weather, by = "faa")
airport1 <- left_join(airports, weather, by = c(origin = faa))
airport1 <- left_join(airports, weather, by = c("origin" = "faa"))
airport1 <- left_join(weather, airport, by = c("origin" = "faa"))
airport1 <- left_join(weather, airports, by = c("origin" = "faa"))
# 2.Create a table that only has flights with planes that have flown at least
# 200 flights
no_flight <- count(flights, tail())
# 2.Create a table that only has flights with planes that have flown at least
# 200 flights
no_flight <- count(flights, tailnum)
no_flight
three <- filter(mtcars, gear == 3)
five <- filter(mtcars, gear == 5)
eight <- bind_rows(three, five)
eight
